{
    "contractName": "MateNodeToken",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "initialSupply",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "MAX_SUPPLY",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/contracts/MateNodeToken.sol\":\"MateNodeToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/contracts/MateNodeToken.sol\":{\"keccak256\":\"0x385d611cf6c3d1044f3e62ef9e822929465582addf6fed3159fa93bc6170f4b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eca0b022279b9bc232b8f7e7ad753f1edc77430fb2e98592a23182b7a8583fae\",\"dweb:/ipfs/QmSHodBiMx6BDVvqyh4KPm4L8BND8DTmzK4Hxvc8Ca7SD9\"]},\"/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
    "bytecode": "6080604052346103f857610d676020813803918261001c816103fc565b9384928339810103126103f8575161003460406103fc565b90600d82526c26b0ba32a737b232aa37b5b2b760991b602083015261005960406103fc565b60038152624d544b60e81b602082015282519091906001600160401b03811161030957600354600181811c911680156103ee575b60208210146102eb57601f811161038b575b506020601f821160011461032857819293945f9261031d575b50508160011b915f199060031b1c1916176003555b81516001600160401b03811161030957600454600181811c911680156102ff575b60208210146102eb57601f8111610288575b50602092601f821160011461022757928192935f9261021c575b50508160011b915f199060031b1c1916176004555b33156102095760058054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3670de0b6b3a7640000810290808204670de0b6b3a764000014901517156101f5576002548181018091116101f557600255335f525f60205260405f208181540190556040519081525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a360405161094590816104228239f35b634e487b7160e01b5f52601160045260245ffd5b631e4fbdf760e01b5f525f60045260245ffd5b015190505f8061011a565b601f1982169360045f52805f20915f5b8681106102705750836001959610610258575b505050811b0160045561012f565b01515f1960f88460031b161c191690555f808061024a565b91926020600181928685015181550194019201610237565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106102e1575b601f0160051c01905b8181106102d65750610100565b5f81556001016102c9565b90915081906102c0565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100ee565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100b8565b601f1982169060035f52805f20915f5b8181106103735750958360019596971061035b575b505050811b016003556100cd565b01515f1960f88460031b161c191690555f808061034d565b9192602060018192868b015181550194019201610338565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106103e4575b601f0160051c01905b8181106103d9575061009f565b5f81556001016103cc565b90915081906103c3565b90607f169061008d565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176103095760405256fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146106f957508063095ea7b31461067757806318160ddd1461065a57806323b872dd1461057b578063313ce5671461056057806332cb6b0c1461053b57806340c10f191461039657806370a082311461035f578063715018a6146103045780638da5cb5b146102dc57806395d89b41146101c1578063a9059cbb14610190578063dd62ed3e146101405763f2fde38b146100b6575f80fd5b3461013c57602036600319011261013c576100cf6107f2565b6100d76108e8565b6001600160a01b0316801561012957600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461013c57604036600319011261013c576101596107f2565b610161610808565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b3461013c57604036600319011261013c576101b66101ac6107f2565b602435903361082b565b602060405160018152f35b3461013c575f36600319011261013c576040515f6004548060011c906001811680156102d2575b6020831081146102be578285529081156102a2575060011461024d575b50819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826107c8565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b82821061028c57506020915082010182610205565b6001816020925483858801015201910190610277565b90506020925060ff191682840152151560051b82010182610205565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101e8565b3461013c575f36600319011261013c576005546040516001600160a01b039091168152602090f35b3461013c575f36600319011261013c5761031c6108e8565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461013c57602036600319011261013c576001600160a01b036103806107f2565b165f525f602052602060405f2054604051908152f35b3461013c57604036600319011261013c576103af6107f2565b602435906103bb6108e8565b670de0b6b3a7640000820291808304670de0b6b3a76400001490151715610527576001600160a01b03169081156104f05780156104ac576a52b7d2dcc80cd2e400000061040a8260025461081e565b11610472577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60205f926104408160025461081e565b6002558415841461045d5780600254036002555b604051908152a3005b84845283825260408420818154019055610454565b60405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b6044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b3461013c575f36600319011261013c5760206040516a52b7d2dcc80cd2e40000008152f35b3461013c575f36600319011261013c57602060405160128152f35b3461013c57606036600319011261013c576105946107f2565b61059c610808565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f1981106105da575b506101b6935061082b565b83811061063f57841561062c573315610619576101b6945f52600160205260405f2060018060a01b0333165f526020528360405f2091039055846105cf565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b3461013c575f36600319011261013c576020600254604051908152f35b3461013c57604036600319011261013c576106906107f2565b60243590331561062c576001600160a01b031690811561061957335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b3461013c575f36600319011261013c575f6003548060011c906001811680156107be575b6020831081146102be578285529081156102a257506001146107695750819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826107c8565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b8282106107a857506020915082010182610205565b6001816020925483858801015201910190610793565b91607f169161071d565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361013c57565b602435906001600160a01b038216820361013c57565b9190820180921161052757565b6001600160a01b03169081156108d5576001600160a01b03169182156108c257815f525f60205260405f20548181106108a957817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b63ec442f0560e01b5f525f60045260245ffd5b634b637e8f60e11b5f525f60045260245ffd5b6005546001600160a01b031633036108fc57565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220f420041d164f61e7f6522101cc4329b5dd05cf3852a1e78feb7de68ac2ef9b1c64736f6c634300081e0033",
    "deployedBytecode": "6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146106f957508063095ea7b31461067757806318160ddd1461065a57806323b872dd1461057b578063313ce5671461056057806332cb6b0c1461053b57806340c10f191461039657806370a082311461035f578063715018a6146103045780638da5cb5b146102dc57806395d89b41146101c1578063a9059cbb14610190578063dd62ed3e146101405763f2fde38b146100b6575f80fd5b3461013c57602036600319011261013c576100cf6107f2565b6100d76108e8565b6001600160a01b0316801561012957600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461013c57604036600319011261013c576101596107f2565b610161610808565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b3461013c57604036600319011261013c576101b66101ac6107f2565b602435903361082b565b602060405160018152f35b3461013c575f36600319011261013c576040515f6004548060011c906001811680156102d2575b6020831081146102be578285529081156102a2575060011461024d575b50819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826107c8565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b82821061028c57506020915082010182610205565b6001816020925483858801015201910190610277565b90506020925060ff191682840152151560051b82010182610205565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101e8565b3461013c575f36600319011261013c576005546040516001600160a01b039091168152602090f35b3461013c575f36600319011261013c5761031c6108e8565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461013c57602036600319011261013c576001600160a01b036103806107f2565b165f525f602052602060405f2054604051908152f35b3461013c57604036600319011261013c576103af6107f2565b602435906103bb6108e8565b670de0b6b3a7640000820291808304670de0b6b3a76400001490151715610527576001600160a01b03169081156104f05780156104ac576a52b7d2dcc80cd2e400000061040a8260025461081e565b11610472577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60205f926104408160025461081e565b6002558415841461045d5780600254036002555b604051908152a3005b84845283825260408420818154019055610454565b60405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b6044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b3461013c575f36600319011261013c5760206040516a52b7d2dcc80cd2e40000008152f35b3461013c575f36600319011261013c57602060405160128152f35b3461013c57606036600319011261013c576105946107f2565b61059c610808565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f1981106105da575b506101b6935061082b565b83811061063f57841561062c573315610619576101b6945f52600160205260405f2060018060a01b0333165f526020528360405f2091039055846105cf565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b3461013c575f36600319011261013c576020600254604051908152f35b3461013c57604036600319011261013c576106906107f2565b60243590331561062c576001600160a01b031690811561061957335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b3461013c575f36600319011261013c575f6003548060011c906001811680156107be575b6020831081146102be578285529081156102a257506001146107695750819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826107c8565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b8282106107a857506020915082010182610205565b6001816020925483858801015201910190610793565b91607f169161071d565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361013c57565b602435906001600160a01b038216820361013c57565b9190820180921161052757565b6001600160a01b03169081156108d5576001600160a01b03169182156108c257815f525f60205260405f20548181106108a957817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b63ec442f0560e01b5f525f60045260245ffd5b634b637e8f60e11b5f525f60045260245ffd5b6005546001600160a01b031633036108fc57565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220f420041d164f61e7f6522101cc4329b5dd05cf3852a1e78feb7de68ac2ef9b1c64736f6c634300081e0033",
    "sourceMap": "359:715:0:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;359:715:0;;;;;;;:::i;:::-;;;;-1:-1:-1;;;359:715:0;;;;;;;;;-1:-1:-1;;;;;359:715:0;;;;;;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;359:715:0;;;;1671:17:3;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;;;;;;;;;;;;1671:17:3;359:715:0;;559:10;1273:26:1;1269:95;;3004:6;359:715:0;;559:10;-1:-1:-1;;;;;;359:715:0;;;;;;;-1:-1:-1;;;;;359:715:0;3052:40:1;-1:-1:-1;;3052:40:1;359:715:0;;;;;;;;;;;;;;;6214:21:3;359:715:0;;;;;;;;;6214:21:3;359:715:0;559:10;-1:-1:-1;359:715:0;-1:-1:-1;359:715:0;;;-1:-1:-1;359:715:0;;;;;;;;;;;;-1:-1:-1;7064:25:3;359:715:0;559:10;7064:25:3;;359:715:0;;;;;;;;;;;;;-1:-1:-1;359:715:0;;1671:17:3;359:715:0;;-1:-1:-1;359:715:0;1269:95:1;1322:31;;;-1:-1:-1;1322:31:1;-1:-1:-1;1671:17:3;359:715:0;;-1:-1:-1;1322:31:1;359:715:0;;;;-1:-1:-1;359:715:0;;;;;;;;;;1671:17:3;-1:-1:-1;359:715:0;;-1:-1:-1;359:715:0;;-1:-1:-1;359:715:0;;;;;;;;;;;;;;;;;;;;;1671:17:3;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:3;-1:-1:-1;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;-1:-1:-1;359:715:0;;1671:17:3;359:715:0;;-1:-1:-1;359:715:0;;;;;;;;;;;;-1:-1:-1;359:715:0;;1671:17:3;359:715:0;;-1:-1:-1;359:715:0;;;;;-1:-1:-1;359:715:0;;;;;;;;;;;-1:-1:-1;359:715:0;;-1:-1:-1;359:715:0;;-1:-1:-1;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;;;;;-1:-1:-1;;359:715:0;;;-1:-1:-1;;;;;359:715:0;;;;;;;;;;:::o",
    "deployedSourceMap": "359:715:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;;;:::i;:::-;1500:62:1;;:::i;:::-;-1:-1:-1;;;;;359:715:0;2627:22:1;;2623:91;;3004:6;359:715:0;;-1:-1:-1;;;;;;359:715:0;;;;;;;-1:-1:-1;;;;;359:715:0;3052:40:1;-1:-1:-1;;3052:40:1;359:715:0;2623:91:1;2672:31;;;359:715:0;2672:31:1;359:715:0;;;;;2672:31:1;359:715:0;;;;;;;;;;-1:-1:-1;;359:715:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;3440:5:3;359:715:0;;:::i;:::-;;;735:10:6;;3440:5:3;:::i;:::-;359:715:0;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;-1:-1:-1;;359:715:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;1710:6:1;359:715:0;;;-1:-1:-1;;;;;359:715:0;;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;1500:62:1;;:::i;:::-;3004:6;359:715:0;;-1:-1:-1;;;;;;359:715:0;;;;;;;-1:-1:-1;;;;;359:715:0;3052:40:1;359:715:0;;3052:40:1;359:715:0;;;;;;;-1:-1:-1;;359:715:0;;;;-1:-1:-1;;;;;359:715:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;;;:::i;:::-;;;1500:62:1;;;:::i;:::-;359:715:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;359:715:0;;860:16;;359:715;;914:10;;359:715;;443:22;979;359:715;2908:12:3;359:715:0;979:22;:::i;:::-;:36;359:715;;7064:25:3;359:715:0;;7505:91:3;6214:21;359:715:0;2908:12:3;359:715:0;6214:21:3;:::i;:::-;2908:12;359:715:0;6628:16:3;;359:715:0;;;;;2908:12:3;359:715:0;;2908:12:3;359:715:0;6624:425:3;359:715:0;;;;;7064:25:3;359:715:0;6624:425:3;359:715:0;;;;;;;;;;;;;;;6624:425:3;;359:715:0;;;-1:-1:-1;;;359:715:0;;;;;;;2761:2:3;359:715:0;;;;-1:-1:-1;;;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;359:715:0;;;;;;;;;;;;-1:-1:-1;;;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;;;;443:22;359:715;;;;;;;;;-1:-1:-1;;359:715:0;;;;;;;2761:2:3;359:715:0;;;;;;;;;-1:-1:-1;;359:715:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;359:715:0;;;;;;;;;;;;;;;735:10:6;359:715:0;;;;;;;;;;;;;;-1:-1:-1;;10561:36:3;;10557:309;;359:715:0;4967:5:3;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:6;9892:21:3;9888:90;;4967:5;359:715:0;;;;;;;;;;;;;;735:10:6;359:715:0;-1:-1:-1;359:715:0;;;;;-1:-1:-1;359:715:0;;;;;10557:309:3;;;9888:90;9936:31;;;359:715:0;9936:31:3;359:715:0;;;;;9936:31:3;9790:89;9836:32;;;359:715:0;9836:32:3;359:715:0;;;;;9836:32:3;10613:130;10668:60;;;;;359:715:0;10668:60:3;735:10:6;359:715:0;;;;;;;;10668:60:3;359:715:0;;;;;;-1:-1:-1;;359:715:0;;;;;2908:12:3;359:715:0;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;;;:::i;:::-;;;735:10:6;;9794:19:3;9790:89;;-1:-1:-1;;;;;359:715:0;;9892:21:3;;9888:90;;735:10:6;359:715:0;;;;;;;;;-1:-1:-1;359:715:0;;;;;-1:-1:-1;359:715:0;;;;;;;10066:31:3;359:715:0;735:10:6;10066:31:3;;359:715:0;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;;1837:5:3;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:715:0;;;;;-1:-1:-1;;359:715:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:3;359:715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;359:715:0;;;;:::o;:::-;;;;-1:-1:-1;;;;;359:715:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;359:715:0;;;;;;:::o;:::-;;;;;;;;;;:::o;5374:300:3:-;-1:-1:-1;;;;;359:715:0;;5457:18:3;;5453:86;;-1:-1:-1;;;;;359:715:0;;5552:16:3;;5548:86;;359:715:0;5473:1:3;359:715:0;5473:1:3;359:715:0;;;5473:1:3;359:715:0;;6321:19:3;;;6317:115;;359:715:0;7064:25:3;359:715:0;;;;5473:1:3;359:715:0;5473:1:3;359:715:0;;;;5473:1:3;359:715:0;;;5473:1:3;359:715:0;5473:1:3;359:715:0;;;5473:1:3;359:715:0;;;;;;;;;;;;7064:25:3;5374:300::o;6317:115::-;6367:50;;;;5473:1;6367:50;;359:715:0;;;;;;5473:1:3;6367:50;5548:86;5591:32;;;5473:1;5591:32;5473:1;5591:32;359:715:0;;5473:1:3;5591:32;5453:86;5498:30;;;5473:1;5498:30;5473:1;5498:30;359:715:0;;5473:1:3;5498:30;1796:162:1;1710:6;359:715:0;-1:-1:-1;;;;;359:715:0;735:10:6;1855:23:1;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:1;735:10:6;1901:40:1;359:715:0;;-1:-1:-1;1901:40:1",
    "sourcePath": "/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/contracts/MateNodeToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.30+commit.73712a01"
    },
    "ast": {
        "absolutePath": "/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/contracts/MateNodeToken.sol",
        "exportedSymbols": {
            "Context": [
                1028
            ],
            "ERC20": [
                894
            ],
            "IERC20": [
                972
            ],
            "IERC20Errors": [
                284
            ],
            "IERC20Metadata": [
                998
            ],
            "MateNodeToken": [
                94
            ],
            "Ownable": [
                242
            ]
        },
        "id": 95,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:0"
            },
            {
                "absolutePath": "/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 95,
                "sourceUnit": 895,
                "src": "57:143:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "/Users/wuyongsong/Documents/project/web3/font/state/packages/state-hardhat/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 95,
                "sourceUnit": 243,
                "src": "201:140:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4,
                            "name": "ERC20",
                            "nameLocations": [
                                "385:5:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 894,
                            "src": "385:5:0"
                        },
                        "id": 5,
                        "nodeType": "InheritanceSpecifier",
                        "src": "385:5:0"
                    },
                    {
                        "baseName": {
                            "id": 6,
                            "name": "Ownable",
                            "nameLocations": [
                                "392:7:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 242,
                            "src": "392:7:0"
                        },
                        "id": 7,
                        "nodeType": "InheritanceSpecifier",
                        "src": "392:7:0"
                    }
                ],
                "canonicalName": "MateNodeToken",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 94,
                "linearizedBaseContracts": [
                    94,
                    242,
                    894,
                    284,
                    998,
                    972,
                    1028
                ],
                "name": "MateNodeToken",
                "nameLocation": "368:13:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": true,
                        "functionSelector": "32cb6b0c",
                        "id": 15,
                        "mutability": "constant",
                        "name": "MAX_SUPPLY",
                        "nameLocation": "430:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 94,
                        "src": "406:59:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 8,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "406:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "commonType": {
                                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                                "typeString": "int_const 100000000000000000000000000"
                            },
                            "id": 14,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                                "hexValue": "313030303030303030",
                                "id": 9,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "443:9:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100000000_by_1",
                                    "typeString": "int_const 100000000"
                                },
                                "value": "100000000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                                "components": [
                                    {
                                        "commonType": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                        },
                                        "id": 12,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 10,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "456:2:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                            "hexValue": "3138",
                                            "id": 11,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "462:2:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_18_by_1",
                                                "typeString": "int_const 18"
                                            },
                                            "value": "18"
                                        },
                                        "src": "456:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                        }
                                    }
                                ],
                                "id": 13,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "455:10:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                }
                            },
                            "src": "443:22:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                                "typeString": "int_const 100000000000000000000000000"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 40,
                            "nodeType": "Block",
                            "src": "571:95:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 29,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "587:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 30,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "591:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "587:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 37,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 31,
                                                    "name": "initialSupply",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 17,
                                                    "src": "599:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 35,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "hexValue": "3130",
                                                                "id": 32,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "616:2:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_10_by_1",
                                                                    "typeString": "int_const 10"
                                                                },
                                                                "value": "10"
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "**",
                                                            "rightExpression": {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 33,
                                                                    "name": "decimals",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 458,
                                                                    "src": "622:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                        "typeString": "function () view returns (uint8)"
                                                                    }
                                                                },
                                                                "id": 34,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "622:10:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            },
                                                            "src": "616:16:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 36,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "615:18:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "599:34:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 28,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 734,
                                            "src": "581:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 38,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "581:53:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 39,
                                    "nodeType": "ExpressionStatement",
                                    "src": "581:53:0"
                                }
                            ]
                        },
                        "id": 41,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4d6174654e6f6465546f6b656e",
                                        "id": 20,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "527:15:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_18b019787c4486fc56fe66a579f89c2e07750201730e9e38aa8c516fcbf4c255",
                                            "typeString": "literal_string \"MateNodeToken\""
                                        },
                                        "value": "MateNodeToken"
                                    },
                                    {
                                        "hexValue": "4d544b",
                                        "id": 21,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "544:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                                            "typeString": "literal_string \"MTK\""
                                        },
                                        "value": "MTK"
                                    }
                                ],
                                "id": 22,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 19,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "521:5:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 894,
                                    "src": "521:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "521:29:0"
                            },
                            {
                                "arguments": [
                                    {
                                        "expression": {
                                            "id": 24,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "559:3:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 25,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "563:6:0",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "559:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 26,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 23,
                                    "name": "Ownable",
                                    "nameLocations": [
                                        "551:7:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 242,
                                    "src": "551:7:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "551:19:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 18,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 17,
                                    "mutability": "mutable",
                                    "name": "initialSupply",
                                    "nameLocation": "501:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 41,
                                    "src": "493:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 16,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "493:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "483:37:0"
                        },
                        "returnParameters": {
                            "id": 27,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "571:0:0"
                        },
                        "scope": 94,
                        "src": "472:194:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 92,
                            "nodeType": "Block",
                            "src": "771:301:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 58,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 50,
                                            "name": "amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45,
                                            "src": "781:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 57,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 51,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 45,
                                                "src": "790:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                                "components": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 55,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "hexValue": "3130",
                                                            "id": 52,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "800:2:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_10_by_1",
                                                                "typeString": "int_const 10"
                                                            },
                                                            "value": "10"
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "**",
                                                        "rightExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 53,
                                                                "name": "decimals",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 458,
                                                                "src": "806:8:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                    "typeString": "function () view returns (uint8)"
                                                                }
                                                            },
                                                            "id": 54,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "806:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            }
                                                        },
                                                        "src": "800:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "id": 56,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "799:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "src": "790:27:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "781:36:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 59,
                                    "nodeType": "ExpressionStatement",
                                    "src": "781:36:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 66,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 61,
                                                    "name": "to",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 43,
                                                    "src": "860:2:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 64,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "874:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 63,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "866:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 62,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "866:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 65,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "866:10:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "860:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "496e76616c69642061646472657373",
                                                "id": 67,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "878:17:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                                    "typeString": "literal_string \"Invalid address\""
                                                },
                                                "value": "Invalid address"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                                    "typeString": "literal_string \"Invalid address\""
                                                }
                                            ],
                                            "id": 60,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "852:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 68,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "852:44:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 69,
                                    "nodeType": "ExpressionStatement",
                                    "src": "852:44:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 73,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 71,
                                                    "name": "amount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 45,
                                                    "src": "914:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 72,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "923:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "914:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                                                "id": 74,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "926:34:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                                    "typeString": "literal_string \"Amount must be greater than zero\""
                                                },
                                                "value": "Amount must be greater than zero"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                                    "typeString": "literal_string \"Amount must be greater than zero\""
                                                }
                                            ],
                                            "id": 70,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "906:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 75,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "906:55:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 76,
                                    "nodeType": "ExpressionStatement",
                                    "src": "906:55:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 83,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 81,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 78,
                                                            "name": "totalSupply",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 467,
                                                            "src": "979:11:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                "typeString": "function () view returns (uint256)"
                                                            }
                                                        },
                                                        "id": 79,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "979:13:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                        "id": 80,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 45,
                                                        "src": "995:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "979:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "id": 82,
                                                    "name": "MAX_SUPPLY",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 15,
                                                    "src": "1005:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "979:36:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "45786365656473206d617820737570706c79",
                                                "id": 84,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1017:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
                                                    "typeString": "literal_string \"Exceeds max supply\""
                                                },
                                                "value": "Exceeds max supply"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
                                                    "typeString": "literal_string \"Exceeds max supply\""
                                                }
                                            ],
                                            "id": 77,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "971:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 85,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "971:67:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 86,
                                    "nodeType": "ExpressionStatement",
                                    "src": "971:67:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 88,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "1054:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 89,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 45,
                                                "src": "1058:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 87,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 734,
                                            "src": "1048:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 90,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1048:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 91,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1048:17:0"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "id": 93,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 48,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 47,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "761:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 153,
                                    "src": "761:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "761:9:0"
                            }
                        ],
                        "name": "mint",
                        "nameLocation": "721:4:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 46,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 43,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "734:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 93,
                                    "src": "726:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 42,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "726:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 45,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "746:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 93,
                                    "src": "738:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 44,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "738:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "725:28:0"
                        },
                        "returnParameters": {
                            "id": 49,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "771:0:0"
                        },
                        "scope": 94,
                        "src": "712:360:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 95,
                "src": "359:715:0",
                "usedErrors": [
                    108,
                    113,
                    254,
                    259,
                    264,
                    273,
                    278,
                    283
                ],
                "usedEvents": [
                    119,
                    906,
                    915
                ]
            }
        ],
        "src": "32:1043:0"
    },
    "functionHashes": {
        "MAX_SUPPLY()": "32cb6b0c",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "474600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "MAX_SUPPLY()": "263",
            "allowance(address,address)": "2837",
            "approve(address,uint256)": "24325",
            "balanceOf(address)": "2559",
            "decimals()": "241",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "owner()": "2478",
            "renounceOwnership()": "28236",
            "symbol()": "infinite",
            "totalSupply()": "2300",
            "transfer(address,uint256)": "50996",
            "transferFrom(address,address,uint256)": "75523",
            "transferOwnership(address)": "28454"
        }
    }
}